// Название пакета
// Имеет большое значение в Go программах
// Стандартное название пакета и файла точки входа - main
package main

// Список импортируемых библиотек.
// Это может быть как стандартные библиотеки, так и
// внешние. Go работает с VCS (Системами контроля версий)
//
// Если какой-то модуль (go.mod) называется github.com/username/libname
// то вы можете импортировать в своё приложение
// (go get github.com/username/libname)
//
// Чтобы создать go.mod файл - go mod init module_name,
// где module_name это например: github.com/username/libname
//
// После того, как вы запушите свой код на гитхаб, то его будет
// возможно импортировать в свои другие программы
//
// Определенную версию (тэг) библиотеки можно импортировать при помощи:
// github.com/username/libname@v0.1.0
//
// Чтобы сделать такое в собственной библиотеки вы можете
// повесить тэг на определенный коммит
//
// go mod tidy - проверяет используемые библиотеки и убирает лишние из
// go.mod, go.sum
//
// В go важное значение имеет internal папка, из такой папки нельзя импортировать
// код в своё приложение. Если у вас присутствует такое, то положите весь код в неё
//
// Примечание: в intro я не использую go.mod, т.к. большая вложенность, в этом
// нет необходимости, а так название модуля должно выглядеть как-то так:
// go mod init github.com/RyabovNick/databasecourse_2/golang/intro/a.hello_world
import "fmt"

// main - точка входа в приложение. Самое приложение можно запустить при помощи
// go run main.go
func main() {
	fmt.Println("Hello world")
}
